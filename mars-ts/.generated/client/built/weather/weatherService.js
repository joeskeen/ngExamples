'use strict';
var mars;
(function (mars) {
    var WeatherService = (function () {
        /*! @ngInject */
        WeatherService.$inject = ['$http'];
        function WeatherService($http) {
            this.$http = $http;
        }
        WeatherService.prototype.getCurrentWeatherData = function () {
            var url = 'api/weather';
            return this.$http.get(url)
                .then(function (response) { return response.data; });
        };
        WeatherService.prototype.getWeatherDataForLastMonth = function () {
            var url = 'api/weather/archive';
            return this.$http.get(url)
                .then(function (response) { return response.data; });
        };
        return WeatherService;
    }());
    mars.WeatherService = WeatherService;
    angular.module('MarsApp')
        .service('weatherService', WeatherService);
})(mars || (mars = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYXRoZXIvd2VhdGhlclNlcnZpY2UudHMiLCJ3ZWF0aGVyL3dlYXRoZXJTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsSUFBVTtBQUFWLENBQUEsVUFBVSxNQUFLO0lBRWQsSUFBQSxrQkFBQSxZQUFBOzs7UUFFQyxTQUFBLGVBQW9CLE9BQXNCO1lBQXRCLEtBQUEsUUFBQTs7UUFFcEIsZUFBQSxVQUFBLHdCQUFBLFlBQUE7WUFDQyxJQUFJLE1BQU07WUFDVixPQUFPLEtBQUssTUFBTSxJQUFnQztpQkFDaEQsS0FBSyxVQUFDLFVBQVEsRUFBSyxPQUFBLFNBQVM7O1FBRy9CLGVBQUEsVUFBQSw2QkFBQSxZQUFBO1lBQ0MsSUFBSSxNQUFNO1lBQ1YsT0FBTyxLQUFLLE1BQU0sSUFBbUM7aUJBQ25ELEtBQUssVUFBQyxVQUFRLEVBQUssT0FBQSxTQUFTOztRQUVoQyxPQUFBOztJQWZhLEtBQUEsaUJBQWM7SUFvQzNCLFFBQVEsT0FBTztTQUNiLFFBQVEsa0JBQWtCO0dBdkNuQixTQUFBLE9BQUk7QUN1QmQiLCJmaWxlIjoid2VhdGhlci93ZWF0aGVyU2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxubmFtZXNwYWNlIG1hcnMge1xyXG5cclxuXHRleHBvcnQgY2xhc3MgV2VhdGhlclNlcnZpY2Uge1xyXG5cdFx0LyohIEBuZ0luamVjdCAqL1xyXG5cdFx0Y29uc3RydWN0b3IocHJpdmF0ZSAkaHR0cDogbmcuSUh0dHBTZXJ2aWNlKSB7IH1cclxuXHJcblx0XHRnZXRDdXJyZW50V2VhdGhlckRhdGEoKSB7XHJcblx0XHRcdHZhciB1cmwgPSAnYXBpL3dlYXRoZXInO1xyXG5cdFx0XHRyZXR1cm4gdGhpcy4kaHR0cC5nZXQ8eyByZXBvcnQ6IElXZWF0aGVyUmVwb3J0IH0+KHVybClcclxuXHRcdFx0XHQudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmRhdGEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGdldFdlYXRoZXJEYXRhRm9yTGFzdE1vbnRoKCkge1xyXG5cdFx0XHR2YXIgdXJsID0gJ2FwaS93ZWF0aGVyL2FyY2hpdmUnO1xyXG5cdFx0XHRyZXR1cm4gdGhpcy4kaHR0cC5nZXQ8eyByZXN1bHRzOiBJV2VhdGhlclJlcG9ydFtdIH0+KHVybClcclxuXHRcdFx0XHQudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmRhdGEpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0ZXhwb3J0IGludGVyZmFjZSBJV2VhdGhlclJlcG9ydCB7XHJcblx0XHR0ZXJyZXN0cmlhbF9kYXRlOiBzdHJpbmc7IC8vIGkuZS4gXCIyMDE2LTA3LTAxXCJcclxuXHRcdHNvbDogbnVtYmVyO1xyXG5cdFx0bHM6IG51bWJlcjtcclxuXHRcdG1pbl90ZW1wOiBudW1iZXI7XHJcblx0XHRtaW5fdGVtcF9mYWhyZW5oZWl0OiBudW1iZXI7XHJcblx0XHRtYXhfdGVtcDogbnVtYmVyO1xyXG5cdFx0bWF4X3RlbXBfZmFocmVuaGVpdDogbnVtYmVyO1xyXG5cdFx0cHJlc3N1cmU6IG51bWJlcjtcclxuXHRcdHByZXNzdXJlX3N0cmluZzogc3RyaW5nOyAvLyBpLmUuIFwiTG93ZXJcIjtcclxuXHRcdGFic19odW1pZGl0eTogYW55O1xyXG5cdFx0d2luZF9zcGVlZDogYW55O1xyXG5cdFx0d2luZF9kaXJlY3Rpb246IHN0cmluZzsgLy8gaS5lLiBcIi0tXCI7XHJcblx0XHRhdG1vX29wYWNpdHk6IHN0cmluZzsgLy8gaS5lLiBcIlN1bm55XCI7XHJcblx0XHRzZWFzb246IHN0cmluZzsgLy8gaS5lLiBcIk1vbnRoIDZcIjtcclxuXHRcdHN1bnJpc2U6IHN0cmluZzsgLy9pLmUuIFwiMjAxNi0wNy0wMVQxMDoyMDowMFpcIjtcclxuXHRcdHN1bnNldDogc3RyaW5nOyAvL2kuZS4gXCIyMDE2LTA3LTAxVDIyOjIwOjAwWlwiO1xyXG5cdH1cclxuXHJcblx0YW5ndWxhci5tb2R1bGUoJ01hcnNBcHAnKVxyXG5cdFx0LnNlcnZpY2UoJ3dlYXRoZXJTZXJ2aWNlJywgV2VhdGhlclNlcnZpY2UpO1xyXG59IiwiJ3VzZSBzdHJpY3QnO1xudmFyIG1hcnM7XG4oZnVuY3Rpb24gKG1hcnMpIHtcbiAgICB2YXIgV2VhdGhlclNlcnZpY2UgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICAvKiEgQG5nSW5qZWN0ICovXG4gICAgICAgIGZ1bmN0aW9uIFdlYXRoZXJTZXJ2aWNlKCRodHRwKSB7XG4gICAgICAgICAgICB0aGlzLiRodHRwID0gJGh0dHA7XG4gICAgICAgIH1cbiAgICAgICAgV2VhdGhlclNlcnZpY2UucHJvdG90eXBlLmdldEN1cnJlbnRXZWF0aGVyRGF0YSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB1cmwgPSAnYXBpL3dlYXRoZXInO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0KHVybClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmRhdGE7IH0pO1xuICAgICAgICB9O1xuICAgICAgICBXZWF0aGVyU2VydmljZS5wcm90b3R5cGUuZ2V0V2VhdGhlckRhdGFGb3JMYXN0TW9udGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0gJ2FwaS93ZWF0aGVyL2FyY2hpdmUnO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGh0dHAuZ2V0KHVybClcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLmRhdGE7IH0pO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gV2VhdGhlclNlcnZpY2U7XG4gICAgfSgpKTtcbiAgICBtYXJzLldlYXRoZXJTZXJ2aWNlID0gV2VhdGhlclNlcnZpY2U7XG4gICAgYW5ndWxhci5tb2R1bGUoJ01hcnNBcHAnKVxuICAgICAgICAuc2VydmljZSgnd2VhdGhlclNlcnZpY2UnLCBXZWF0aGVyU2VydmljZSk7XG59KShtYXJzIHx8IChtYXJzID0ge30pKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
